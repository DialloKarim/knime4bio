= Motivation =
we want to filter some mutations processed by the *Variant Effect Predictor* http://www.ensembl.org/info/docs/variation/index.html#VEP
= Solution =
* create a new java snippet node.

The following java code is invoked for each mutation:
  * put the column 'INFO' in the string info
  * split 'INFO' using ';' as a delimiter
  * only keep the tokens starting wit "CQ="
  * remove the 'CQ=' prefix
  * split this token using ':' as a delimiter
  * return true if the string matches your need
 
In the following example, the lines starting with '//' are ignored:
{{{
String info=$INFO$ ;
for(String s1: info.split("[;]"))
   {
   if(!s1.startsWith("CQ=")) continue;
   s1=s1.substring(3);
   for(String s2: s1.split("[\\:]"))
	{

		//if(s2.equals("3PRIME_UTR")) return true;
		//if(s2.equals("5PRIME_UTR")) return true;
		//if(s2.equals("COMPLEX_INDEL")) return true;
		//if(s2.equals("DOWNSTREAM")) return true;
		if(s2.equals("ESSENTIAL_SPLICE_SITE")) return true;
		//if(s2.equals("FRAMESHIFT_CODING")) return true;
		//if(s2.equals("INTERGENIC")) return true;
		//if(s2.equals("INTRONIC")) return true;
		//if(s2.equals("NMD_TRANSCRIPT")) return true;
		if(s2.equals("NON_SYNONYMOUS_CODING")) return true;
		//if(s2.equals("PARTIAL_CODON")) return true;
		//if(s2.equals("SPLICE_SITE")) return true;
		if(s2.equals("STOP_GAINED")) return true;
		if(s2.equals("STOP_LOST")) return true;
		//if(s2.equals("SYNONYMOUS_CODING")) return true;
		//if(s2.equals("UPSTREAM")) return true;
		if(s2.equals("WITHIN_MATURE_miRNA")) return true;
		//if(s2.equals("WITHIN_NON_CODING_GENE")) return true;

	}
   }
return false;
}}}